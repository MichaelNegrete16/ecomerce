name: Despliegue - EcomerFront

on:
  push:
    branches:
      - main

jobs:
  # --- TRABAJO 1: CONSTRUIR LA APLICACIÓN ---
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar pnpm
        run: npm install -g pnpm

      - name: Configurar Node.js y pnpm con caché
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Asegúrate que coincida con la de tu servidor
          cache: "pnpm"

      - name: Crear archivo .env.prod en el paquete
        run: |
          touch .env
          echo "ECOMERCE_API_URL=${{ secrets.ECOMERCE_API_URL }}" > .env
          echo "ECOMERCE_TOKEN=${{ secrets.ECOMERCE_TOKEN }}" >> .env
          
      - name: Instalar dependencias
        run: pnpm install
 
      - name: Construir la aplicación
        run: pnpm run build

      - name: Comprimir artefacto para despliegue
        run: |
          cd ../
          tar -czf ecomerce.tar.gz ./ecomerce

      - name: copiar archivo contruido
        run: |
          cd ../
          cp ecomerce.tar.gz ./ecomerce

      - name: Subir artefacto para el trabajo de despliegue
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: ecomerce.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build # Este trabajo depende de que 'build' termine correctamente
    steps:
      - name: Descargar artefacto del trabajo de construcción
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
 
      - name: Copiar paquete al servidor
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "ecomerce.tar.gz"
          target: "/home/proyet"
 
      - name: Desplegar y reiniciar en el servidor
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e # Terminar el script si algún comando falla
            
            # 1. Crear el directorio de la nueva aplicación y descomprimir
            echo "INFO: Creando nuevo directorio y descomprimiendo..."
            sudo rm -rf /home/proyet/ecomerce
            tar -xzf /home/proyet/ecomerce.tar.gz -C /home/proyet/
            sudo rm -rf /home/proyet/ecomerce.tar.gz
            
      - name: Levantar pm2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
           # 2. Reiniciar el servicio con PM2
             echo "INFO: Recargando la aplicación con PM2..."
             cd /home/proyet/ecomerce
             # Intenta recargar la app; si no existe, la inicia.
             # Asegúrate que 'pm2.config.js' esté configurado para usar sudo si es necesario.
             pm2 reload pm2.config.js
            
             echo "✅ Despliegue completado."
